<?xml version="1.0" encoding="utf-8" ?>
<!--
All limitations resolve to boolean (true/false) values.

 TODO: Should parameter checks support optional default values?

Supported check types:
* Simple - Checks if the address has the value provided in value.
* Parameter - Checks if the address has the value provided by whatever uses this limitation. Syntax to use in caller: CheckAddress:Parameter
* Limitation - Check if another limitation returns target (boolean). Use this to provide aliases or composite limitations easily without duplicate code.
* Comparison - Compares if multiple addresses are equal to eachother or not. equal specifies whether they should be or not.
-->

<limitations xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <limitation>
    <name>OnMission</name>
    <checks>
      <check xsi:type="simple">
        <address>OnMission</address>
        <value>true</value>
      </check>
      <check xsi:type="parameter">
        <address>MissionName</address>
      </check>
    </checks>
  </limitation>
  <limitation>
    <name>OnFoot</name>
    <checks>
      <check xsi:type="limitation">
        <limitation>InVehicle</limitation>
        <target>false</target>
      </check>
    </checks>
  </limitation>
  <limitation>
    <name>InVehicle</name>
    <checks>
      <check xsi:type="comparison">
        <addresses>
          <address>PlayerPointer</address>
          <address>VehiclePointer</address>
        </addresses>
        <equal>false</equal>
      </check>
  </checks>
  </limitation>
  <limitation>
    <name>InVehicleType</name>
    <checks>
      <check xsi:type="limitation">
        <limitation>InVehicle</limitation>
        <target>true</target>
      </check>
      <check xsi:type="parameter">
        <address>CurrentVehicleType</address>
      </check>
</checks>
  </limitation>
</limitations>
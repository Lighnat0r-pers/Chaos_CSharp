<?xml version="1.0" encoding="utf-8"?>

<xs:schema id="MemoryAddresses" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!--+++ Elements -->

  <xs:element name="addresses">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="memoryaddress" maxOccurs="unbounded" type="MemoryAddress"/>
      </xs:sequence>
      <xs:attribute name="gameversion" type="xs:token" use="required"/>
    </xs:complexType>
  </xs:element>

  <!--+++ Complex types -->

  <xs:complexType name="MemoryAddress">
    <xs:sequence>
      <xs:element name="name" type="Name" />
      <xs:element name="address" type="Address"/>
      <xs:element name="type" type="Type"/>
      <xs:element name="length" type="Length" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="dynamic" mixed="true">
    <xs:complexContent>
      <xs:extension base="Address">
        <xs:sequence>
          <xs:element name="baseaddress" type="Name" />
          <xs:element name="offset" type="Offset"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="static">
    <xs:simpleContent>
      <xs:restriction base="Address">
        <xs:simpleType>
          <xs:restriction base="xs:hexBinary">
            <xs:minLength value="3"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="Address" abstract="true" mixed="true"/>

  <!--+++ Simple types -->

  <xs:simpleType name="Name">
    <xs:restriction base="xs:Name">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Enforce that the address contains at least 3 octets.
  What we're looking for is that the address is never below the image base address.
  From what I've read online the lowest allowed base address is 0x010000 so the restriction is based on that. Not 100% confirmed, though.-->
  <xs:simpleType name="StaticAddress">
    <xs:restriction base="xs:hexBinary">
      <xs:minLength value="3"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Length">
    <xs:restriction base="xs:unsignedLong">
      <xs:minInclusive value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Offset">
    <xs:restriction base="xs:hexBinary">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <!--Limit type to the supported values-->
  <xs:simpleType name="Type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="bool"/>
      <xs:enumeration value="byte"/>
      <xs:enumeration value="short"/>
      <xs:enumeration value="int"/>
      <xs:enumeration value="long"/>
      <xs:enumeration value="float"/>
      <xs:enumeration value="double"/>
      <xs:enumeration value="ascii"/>
      <xs:enumeration value="unicode"/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
